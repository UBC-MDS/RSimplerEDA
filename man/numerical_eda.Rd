% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/numerical_eda.R
\name{numerical_eda}
\alias{numerical_eda}
\title{Numerical Plotting Function}
\usage{
numerical_eda(
  data,
  xval,
  yval,
  color,
  title = NULL,
  plot_type = "scatter",
  font_size = 10,
  color_scheme = "Tableau 10",
  x_transform = FALSE,
  y_transform = FALSE
)
}
\arguments{
\item{data}{A tibble or data frame object.}

\item{xval}{A numeric variable used to represent the x-axis.}

\item{yval}{A numeric variable used to represent the y-axis.}

\item{color}{A character variable used to group the data
points in different colors.}

\item{title}{An optional character variable used to set the title and axis.}

\item{plot_type}{An optional character variable used to represent
the graphical relationship between xval and yval,
options are "scatter" or "line" plot.}

\item{font_size}{An optional integer variable used to set the font size.}

\item{color_scheme}{An optional character variable used to set the color
scheme}

\item{x_transform}{An optional logical, whether a log transformation occurs
on the x-axis.}

\item{y_transform}{An optional logical, whether a log transformation occurs
on the y-axis.}
}
\value{
numerical_plot A ggplot2 object. The numerical plot.
}
\description{
This function takes in a tibble or dataframe object, two numeric columns,
and produces either a scatter or line plot to visualize the relationship
between the two numerical features. Users can optionally change default
arguments for plot-type, color, title, size of text, color-scheme, and
toggle log transformation for the x and y axis.
}
\examples{

df <- iris
numerical_plot <- numerical_eda(
  data = df,
  xval = Petal.Length,
  yval = Petal.Width,
  color = Species,
  title = "Petal.Length vs Petal.Width",
  font_size = 12
)
}
